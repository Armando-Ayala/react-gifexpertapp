{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInpuValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","split","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAETC,mBAAS,IAFA,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkB5C,OACI,sBAAMC,SAXW,SAAAC,GACjBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC7CN,EAAa,MAMjB,SAEI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SApBc,SAAAP,GACtBF,EAAaE,EAAEQ,OAAOF,a,+BCLjBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,8DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAG1B,MAAM,CACFC,GAAID,EAAIC,GAERC,MAAOF,EAAIE,MAAMC,MAAM,OAAO,GAC9BX,IAAG,UAAEQ,EAAII,cAAN,aAAE,EAAYC,iBAAiBb,QAZvB,kBAeZM,GAfY,4CAAH,sDCDPQ,EAAc,SAAC,GAAqB,EAApBL,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIpC,OACI,sBAAKe,UAAU,kCAAf,UACI,qBAAKC,IAAKhB,EAAKiB,IAAKP,IACpB,4BAAIA,QCJHQ,EAAU,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAAc,ECAX,SAACA,GAAa,IAAD,EAEXd,mBAAS,CAC/BqB,KAAM,GACNc,SAAS,IAJwB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAkBrC,OAXAC,qBAAU,WACNzB,EAAQC,GACPyB,MAAK,SAAAC,GAEFH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAGlB,CAACrB,IAEGsB,EDhBwBK,CAAa3B,GAAhCc,EAFuB,EAE5BP,KAAac,EAFe,EAEfA,QAGpB,OACI,qCACI,6BAAKrB,IAEJqB,GAAW,wCAEZ,qBAAKJ,UAAU,YAAf,SAEQH,EAAOL,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEhBxBiB,EAAe,WAAO,IAAD,EAEM1C,mBAAS,CAAC,gBAFhB,mBAEvBQ,EAFuB,KAEXT,EAFW,KAU9B,OACI,qCACI,gDACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEQS,EAAWe,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MChBjC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.431c514c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInpuValue] = useState('');\r\n\r\n    const handleInputChange = e => {\r\n        setInpuValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories( categories => [inputValue, ...categories] );\r\n            setInpuValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n            {/* <h1>{inpuValue}</h1> */}\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\n\r\nexport const getGifs = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=7&api_key=0ozP1WiOm6Fmap9D81TpsyJUp7GFu65f`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        // console.log(img);\r\n        //  console.log(img.title.split('GIF'));\r\n        return{\r\n            id: img.id,\r\n            // title: img.title,\r\n            title: img.title.split('GIF')[0],\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    // console.log({id, title, url});\r\n\r\n    return (\r\n        <div className=\"card animate__fadeInBottomRight\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n\r\n}\r\n","// import React, { useState, useEffect } from 'react'\r\nimport React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>{category}</h2>\r\n            \r\n            {loading && <p>Loading</p>}\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\n\r\n\r\nexport const useFetchGifs = (category) =>{\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n        .then(imgs => {\r\n\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n        })\r\n    }, [category])\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Dragon Ball']);\r\n\r\n    // const handleAdd = () => {\r\n    //     const p1 = 'Shrek';\r\n    //     //setCategories( category => [...category, p1]);\r\n    //     setCategories( [p1, ...categories] );\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h1>Gif Expert App</h1>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr/>\r\n            <ol>\r\n                { \r\n                    categories.map( category => ( \r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n\r\n// const apiKey = '0ozP1WiOm6Fmap9D81TpsyJUp7GFu65f';\r\n// const resp   = await fetch(`http://api.giphy.com/v1/gifs/random?api_key=${ apiKey }`);\r\n// const { data } = await resp.json(); \r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {GifExpertApp} from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}